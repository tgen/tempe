# Adds bam_to_cram, bam_qc and other quality control tasks

# Splits a bam if the sample has more than one library
{% from 'modules/qc/split_bam.j2' import split_bam with context %}

# Performed on all bams
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_samtools_stats with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_samtools_flagstat with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_samtools_idxstats with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_gatk_collectmultiplemetrics with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_gatk_convertsequencingarrtifacttooxog with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_snpsniffer_geno with context %}
{% from 'modules/qc/bam_qc_all.j2' import bam_qc_samtools_markdup with context %}
{% from 'modules/qc/stats2lims.j2' import stats2lims with context %}

# Performed on genomes
{% from 'modules/qc/bam_qc_genome.j2' import bam_qc_gatk_collectwgsmetrics with context %}
{% from 'modules/qc/bam_qc_genome.j2' import bam_qc_gatk_collectwgsmetricswithnonzerocoverage with context %}
{% from 'modules/qc/bam_qc_genome.j2' import bam_qc_gatk_collectrawwgsmetrics with context %}

# Performed on exomes
{% from 'modules/qc/bam_qc_exome.j2' import bam_qc_gatk_collecthsmetrics with context %}

# Performed on rna
{% from 'modules/qc/bam_qc_rna.j2' import bam_qc_gatk_collectrnaseqmetrics with context %}
{% from 'modules/qc/bam_qc_rna.j2' import bam_qc_rna_BTcell_loci with context %}

# Performed on constitutional dna
{% from 'modules/qc/bam_qc_constitutional_dna.j2' import bam_qc_verifybamid2 with context %}
{% from 'modules/qc/bam_qc_constitutional_dna.j2' import sex_check with context %}

{% macro bam_qc(sample, aligner='bwa') %}

    {% set sample_lbs = sample.read_groups.values()|groupby('rglb') %}
    {% set libraryCount = sample_lbs|length %}
    {% set sample_lb = sample_lbs[0][0] %}

    {# General Library type specific tasks #}
    {% if sample.gltype == 'rna' %}
      {% set taskPrefix = 'RNA' %}
      {{- bam_qc_gatk_collectrnaseqmetrics(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
      {{- bam_qc_rna_BTcell_loci(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {% elif sample.gltype == 'exome' %}
      {% set taskPrefix = 'Exome' %}
      {{- bam_qc_gatk_collecthsmetrics(sample, aligner=aligner) }}
    {% elif sample.gltype == 'genome' %}
      {% set taskPrefix = 'Genome' %}
      {{- bam_qc_gatk_collectwgsmetrics(sample, libraryCount, sample_lb, aligner=aligner) }}
      {{- bam_qc_gatk_collectwgsmetricswithnonzerocoverage(sample, libraryCount, sample_lb, aligner=aligner) }}
      {{- bam_qc_gatk_collectrawwgsmetrics(sample, libraryCount, sample_lb, aligner=aligner) }}
    {% endif %}

    {# Constitutional dna specific tasks #}
    {% if sample.subGroup|lower == 'constitutional' and ( sample.gltype|lower == 'genome' or sample.gltype|lower == 'exome' )  %}
      {{- bam_qc_verifybamid2(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
      {{- sex_check(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {% endif %}

    {# get oxo stats #}
    {{- bam_qc_gatk_convertsequencingarrtifacttooxog(sample, taskPrefix=taskPrefix, aligner=aligner) }}

    {% for sample_lb, sample_rgs in sample.read_groups.values()|groupby('rglb') %}
      {# Tasks performed on dna bams #}
      {% if sample.gltype not in ['rna',] and sample.umiType is defined and sample.umiType != "Inline_Duplex" and 'bwa' in aligner | default(false) %}
        {{- bam_qc_samtools_markdup(sample, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
      {% endif %}
    {% endfor%}

    {# Tasks performed on all bams #}
    {{- bam_qc_samtools_stats(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {{- bam_qc_samtools_flagstat(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {{- bam_qc_samtools_idxstats(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {{- bam_qc_gatk_collectmultiplemetrics(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}
    {{- bam_qc_snpsniffer_geno(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner) }}

    {% if libraryCount > 1 %}
      {% for sample_lb, sample_rgs in sample.read_groups.values()|groupby('rglb') %}

        {{- split_bam(sample, sample_lb, sample_rgs, aligner=aligner) }}

        {# General Library type specific tasks #}
        {% if sample.gltype == 'rna' %}
          {{- bam_qc_gatk_collectrnaseqmetrics(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
          {{- bam_qc_rna_BTcell_loci(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {% elif sample.gltype == 'genome' %}
          {{- bam_qc_gatk_collectwgsmetrics(sample, libraryCount, sample_lb, aligner=aligner, bam_level=false) }}
          {{- bam_qc_gatk_collectwgsmetricswithnonzerocoverage(sample, libraryCount, sample_lb, aligner=aligner, bam_level=false) }}
          {{- bam_qc_gatk_collectrawwgsmetrics(sample, libraryCount, sample_lb, aligner=aligner, bam_level=false) }}
        {% endif %}

        {# Constitutional dna specific tasks #}
        {% if sample.subGroup|lower == 'constitutional' and ( sample.gltype|lower == 'genome' or sample.gltype|lower == 'exome' )  %}
          {{- bam_qc_verifybamid2(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
          {{- sex_check(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {% endif %}

        {# Tasks performed on all bams #}
        {{- bam_qc_samtools_stats(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {{- bam_qc_samtools_flagstat(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {{- bam_qc_samtools_idxstats(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {{- bam_qc_gatk_collectmultiplemetrics(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
        {{- bam_qc_snpsniffer_geno(sample, libraryCount, sample_lb, taskPrefix=taskPrefix, aligner=aligner, bam_level=false) }}
      {% endfor %}
    {% endif %}
{% endmacro %}

