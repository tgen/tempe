# This macro is used to run the samStats2json.py script on individual
# stats files produced by bam_qc steps to get a structured json file
# that help facilitate downstream analysis and upload to LIMS via REST api integration.

{% from 'modules/qc/stats2lims.j2' import stats2lims with context %}

{% macro stats2json(tag1, tag2, task, input_file, output_file, file_type, sample=none, sample_name=none, library_name=none, read_group_name=none, lims_upload=true ) %}

{% if sample is not none %}
  {% if sample.aligners | length > 1 %}
    {% if 'bwa' not in task %}
      {% set lims_upload=false %}
    {% endif %}
  {% endif %}
{% endif %}

- name: stats2json_{{ task }}_{{ file_type }}
  tags: [{{ tag1 }}, quality_control, stats, stats2json, {{ tag2 }}]
  input: {{ input_file }}
  output: {{ output_file }}
  walltime: "0:10:00"
  cpus: 1
  mem: 2G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.python3.container }}
  digest: {{ constants.tools.python3.digest }}
  cmd: |
    set -eu
    set -o pipefail

    # {{ required_scripts.stats2json.path }} md5: {{ required_scripts.stats2json.path | md5 }}
    python3 {{ required_scripts.stats2json.path }} \
      --output {{ output_file }} \
      {% if sample_name is not none %}
      --samplename {{ sample_name }} \
      {% endif %}
      {% if library_name is not none %}
      --libraryname {{ library_name }} \
      {% endif %}
      {% if read_group_name is not none %}
      --readgroupname {{ read_group_name }} \
      {% endif %}
      {{ input_file }} \
      {{ file_type }}

    {% if lims_upload is sameas true %}
      {{- stats2lims(tag1, tag2, task, output_file, file_type) }}
    {% endif %}

{% endmacro %}