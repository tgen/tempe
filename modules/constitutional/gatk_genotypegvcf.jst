{% from 'modules/annotation/main.jst' import annotate_vcfs with context %}
{% from 'utilities/remove_files.jst' import remove_files with context %}
{% from 'utilities/vcf_stats.jst' import vcf_stats with context %}

{%- macro genotypegvcf(sample, aligner='bwa', taskPrefix='Genome') %}

{%- set bam %}{{ sample.gltype }}/alignment/{{ aligner }}/{{ sample.name }}/{{ sample.name }}.{{ aligner }}.bam{% endset %}
{%- set temp_dir %}temp/{{ sample.gltype }}/constitutional_variant_calls/genotypegvcf/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set results_dir %}{{ sample.gltype }}/constitutional_variant_calls/haplotypecaller/{{ sample.name }}_{{ aligner }}{% endset %}
{%- set all_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.hc.all.vcf.gz{% endset %}
{%- set pass_vcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.hc.pass.vcf.gz{% endset %}
{%- set gvcf %}{{ results_dir }}/{{ sample.name }}.{{ aligner }}.hc.g.vcf.gz{% endset %}

{% for batch in constants.tempe.calling_intervals %}

- name: genotypegvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  tags: [{{ sample.gltype}}, constitutional, genotype_hc_gvcf, gatk_GenotypeGVCFs, {{ sample.name }}]
  input:
    - {{ gvcf }}
    - {{ gvcf }}.tbi
    - {{ constants.tempe.reference_fasta }}
  output: {{ temp_dir }}/{{ loop.index }}.vcf.gz
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.gatk.container }}
  digest: {{ constants.tools.gatk.digest }}
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p "{{ temp_dir }}"

    gatk GenotypeGVCFs \
      --tmp-dir "temp" \
      --java-options "-Xmx14G" \
      --reference "{{ constants.tempe.reference_fasta }}" \
      {% for interval in batch %}
      --intervals "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      --variant "{{ gvcf }}" \
      --output "{{ temp_dir }}/{{ loop.index }}.vcf.gz"


- name: cnnscorevariants2d_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  tags: [{{ sample.gltype}}, constitutional, genotype_hc_gvcf, gatk_GenotypeGVCFs, {{ sample.name }}]
  reset: genotypegvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  input:
    - {{ bam }}
    - {{ bam }}.bai
    - {{ temp_dir }}/{{ loop.index }}.vcf.gz
    - {{ constants.tempe.reference_fasta }}
  output: {{ temp_dir }}/{{ loop.index }}.scored.vcf.gz
  after: genotypegvcf_{{ sample.name }}_{{ aligner }}_{{ loop.index }}
  walltime: "24:00:00"
  cpus: 8
  mem: 32G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.gatk.container }}
  digest: {{ constants.tools.gatk.digest }}
  cmd: |

    source activate gatk

    gatk CNNScoreVariants \
      --java-options "-Xmx28G" \
      --tensor-type read_tensor \
      {% for interval in batch %}
      --intervals "{{ interval.contig }}:{{ interval.start }}-{{ interval.stop }}" \
      {% endfor %}
      --reference "{{ constants.tempe.reference_fasta }}" \
      --input "{{ bam }}" \
      --variant "{{ temp_dir }}/{{ loop.index }}.vcf.gz" \
      --output "{{ temp_dir }}/{{ loop.index }}.scored.vcf.gz"

{% endfor %}


- name: haplotypecaller_merge_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype}}, constitutional, genotype_hc_gvcf, gatk_GenotypeGVCFs, {{ sample.name }}]
  reset: predecessors
  input:
    {% for batch in constants.tempe.calling_intervals %}
    - {{ temp_dir }}/{{ loop.index }}.scored.vcf.gz
    {% endfor %}
  output:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
  walltime: "24:00:00"
  cpus: 1
  mem: 4G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  digest: {{ constants.tools.bcftools.digest }}
  cmd: |
    set -eu
    set -o pipefail

    mkdir -p "{{ results_dir }}"

    bcftools concat \
      --output-type z \
      --output "{{ all_vcf }}" \
      {% for batch in constants.tempe.calling_intervals %}
      {% if not loop.last %}
      "{{ temp_dir }}/{{ loop.index }}.scored.vcf.gz" \
      {% else %}
      "{{ temp_dir }}/{{ loop.index }}.scored.vcf.gz"
      {% endif %}
      {% endfor %}

    bcftools index --tbi --force "{{ all_vcf }}"


- name: haplotypecaller_filter_variants_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype}}, constitutional, genotype_hc_gvcf, gatk_GenotypeGVCFs, {{ sample.name }}]
  input:
    - {{ all_vcf }}
    - {{ all_vcf }}.tbi
    {% for resource in constants.tempe.gatk_cnn_resources %}
    - {{ resource }}
    {% endfor %}
  output:
    - {{ temp_dir }}/{{ sample.name }}.hc.fvt.vcf.gz
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.gatk.container }}
  digest: {{ constants.tools.gatk.digest }}
  cmd: |
    set -eu
    set -o pipefail

    {# Annotate with FilterVariantTranches #}
    gatk FilterVariantTranches \
      --java-options "-Xmx14G" \
      --info-key CNN_2D \
      --snp-tranche 99.9 \
      --indel-tranche 99.5 \
      {% for resource in constants.tempe.gatk_cnn_resources %}
      --resource "{{ resource }}" \
      {% endfor %}
      --variant "{{ all_vcf }}" \
      --output "{{ temp_dir }}/{{ sample.name }}.hc.fvt.vcf.gz" \


- name: haplotypecaller_bcftools_filter_variants_{{ sample.name }}_{{ aligner }}
  tags: [{{ sample.gltype}}, constitutional, genotype_hc_gvcf, gatk_GenotypeGVCFs, {{ sample.name }}]
  input:
    - {{ temp_dir }}/{{ sample.name }}.hc.fvt.vcf.gz
    {% if sample.gltype == 'exome' %}
    - {{ sample.capture_kit.extended_bed }}
    {% endif %}
  output:
    - {{ pass_vcf }}
    - {{ pass_vcf }}.tbi
  walltime: "24:00:00"
  cpus: 4
  mem: 16G
  queue_preset: "DEFAULT"
  container: {{ constants.tools.bcftools.container }}
  digest: {{ constants.tools.bcftools.digest }}
  cmd: |
    set -eu
    set -o pipefail

    bcftools filter \
      --output-type z \
      --include 'FILTER == "."' \
      {% if sample.gltype == 'exome' %}
      --targets-file "{{ sample.capture_kit.extended_bed }}" \
      {% endif %}
      "{{ temp_dir }}/{{ sample.name }}.hc.fvt.vcf.gz" \
      > "{{ pass_vcf }}"

    bcftools index --tbi --force "{{ pass_vcf }}"


{# Remove the remaining files #}
{% set directory %}{{ temp_dir }}{% endset %}
{% set task %}haplotypecaller_bcftools_filter_variants_{{ sample.name }}_{{ aligner }}{% endset %}
{{- remove_files(directory,none,task) }}

{{- annotate_vcfs(sample, temp_dir, results_dir, pass_vcf, taskPrefix, aligner, 'hc', 'constitutional') }}
{{- vcf_stats(pass_vcf, results_dir) }}
{{- vcf_stats(all_vcf, results_dir) }}


{% endmacro %}
